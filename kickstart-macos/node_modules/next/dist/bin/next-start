#!/usr/bin/env node
'use strict';

var _path = require('path');

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _server = require('../server');

var _server2 = _interopRequireDefault(_server);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var argv = (0, _minimist2.default)(process.argv.slice(2), {
  alias: {
    h: 'help',
    H: 'hostname',
    p: 'port'
  },
  boolean: ['h'],
  string: ['H'],
  default: { p: 3000 }
});

if (argv.hostname === '') {
  console.error('> Provided hostname argument has no value');
  process.exit(1);
}

if (argv.help) {
  console.log('\n    Description\n      Starts the application in production mode.\n      The application should be compiled with `next build` first.\n\n    Usage\n      $ next start <dir> -p <port>\n\n    <dir> is the directory that contains the compiled dist folder\n    created by running `next build`.\n    If no directory is provided, the current directory will be assumed.\n    You can set a custom dist folder in config https://github.com/zeit/next.js#custom-configuration\n\n    Options\n      --port, -p      A port number on which to start the application\n      --hostname, -H  Hostname on which to start the application\n      --help, -h      Displays this message\n  ');
  process.exit(0);
}

var dir = (0, _path.resolve)(argv._[0] || '.');

var srv = new _server2.default({ dir: dir });
srv.start(argv.port, argv.hostname).then(function () {
  if (!process.env.NOW) {
    console.log('> Ready on http://' + (argv.hostname ? argv.hostname : 'localhost') + ':' + argv.port);
  }
}).catch(function (err) {
  console.error(err);
  process.exit(1);
});